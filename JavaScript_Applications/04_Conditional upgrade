// [ 조건문 Upgrade ]
// -------------------------------------------
// ① 배열 이용 X
function isKoreanFood_1(food) {
  if (food === "불고기" || food === "비빔밥" || food === "떡볶이") {
    return true;
  }
  return false;
}
const food1 = isKoreanFood_1("불고기");
const food2 = isKoreanFood_1("파스타");
console.log(food1);
console.log(food2);



// ② 배열 이용 O
function isKoreanFood_2(food) {
  if (["불고기", "비빔밥", "떡볶이"].includes(food)) {
    return true;
  }
  return false;
}
const food3 = isKoreanFood_2("불고기");
const food4 = isKoreanFood_2("파스타");
console.log(food3);
console.log(food4);



// ③ 함수 이용
const getMeal_1 = (mealType) => {
  if (mealType === "한식") return "불고기";
  if (mealType === "양식") return "파스타";
  if (mealType === "중식") return "멘보샤";
  if (mealType === "일식") return "초밥";
  return "굶기";
};

console.log(getMeal_1("한식"));
console.log(getMeal_1("중식"));
console.log(getMeal_1());



// ④ 객체 괄호 표기법 이용 -> 조건문 사용 X
const meal = {
  한식: "불고기",
  중식: "멘보샤",
  일식: "초밥",
  양식: "스테이크",
  인도식: "카레"
};

const getMeal_2 = (mealType) => {
  return meal[mealType] || "굶기";
};

console.log(getMeal_2("한식"));
console.log(getMeal_2());
// -------------------------------------------
